---
- name: "Git | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"

- name: "Git | Set diff.colorMoved"
  community.general.git_config:
    name: diff.colorMoved
    scope: global
    value: zebra

- name: "Git | Set fetch.prune"
  community.general.git_config:
    name: fetch.prune
    scope: global
    value: true

# git config --global --add url."git@github.com:".insteadOf "https://github.com/"
# - name: "Git | Set URL to SSH"
#   community.general.git_config:
#     name: URL
#     scope: global
#     value: "git@github.com"

- name: "Git | Set init.defaultBranch"
  community.general.git_config:
    name: init.defaultBranch
    scope: global
    value: main

- name: "Git | Set pull.rebase"
  community.general.git_config:
    name: pull.rebase
    scope: global
    value: true

- name: "Git | Set rebase.autoStash"
  community.general.git_config:
    name: rebase.autoStash
    scope: global
    value: true

- name: "Git | Set user.email"
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ git_user_email }}"
  no_log: true

- name: "Git | Set user.name"
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ git_user_name }}"

# - name: "Git | Set user.signingkey"
#   community.general.git_config:
#     name: user.signingkey
#     scope: global
#     value: "{{ ansible_user_dir }}/.ssh/id_ed25519.pub"

# - name: "Git | Set gpg.format"
#   community.general.git_config:
#     name: gpg.format
#     scope: global
#     value: ssh

# - name: "Git | Set commit.gpgsign"
#   community.general.git_config:
#     name: commit.gpgsign
#     scope: global
#     value: true

# - name: "Git | Set tag.gpgsign"
#   community.general.git_config:
#     name: tag.gpgsign
#     scope: global
#     value: true

# - name: "Git | Ensure ~/.config/git/allowed_signers exists"
#   ansible.builtin.file:
#     path: "{{ ansible_user_dir }}/.config/git"
#     state: directory
#     mode: "0755"

# - name: "Git | Configure ~/.config/git/allowed_signers"
#   ansible.builtin.copy:
#     src: allowed_signers
#     dest: "{{ ansible_user_dir }}/.config/git/allowed_signers"
#     mode: "0600"

# - name: "Git | Set gpg.ssh.allowedSignersFile"
#   community.general.git_config:
#     name: gpg.ssh.allowedSignersFile
#     scope: global
#     value: "{{ ansible_user_dir }}/.config/git/allowed_signers"



- name: "Git | Set alias.build"
  community.general.git_config:
    name: alias.build
    scope: global
    value: "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"build${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"

- name: "Git | Set alias.chore"
  community.general.git_config:
    name: alias.chore
    scope: global
    value: "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"chore${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"

- name: "Git | Set alias.ci"
  community.general.git_config:
    name: alias.ci
    scope: global
    value: "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"ci${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"

# - name: "Git | Set alias."
#   community.general.git_config:
#     name: alias.
#     scope: global
#     value:

# - name: "Git | Set alias.docs"
#   community.general.git_config:
#     name: alias.
#     scope: global
#     value:

# - name: "Git | Set alias."
#   community.general.git_config:
#     name: alias.
#     scope: global
#     value:

# - name: "Git | Set alias."
#   community.general.git_config:
#     name: alias.
#     scope: global
#     value:

# - name: "Git | Set alias."
#   community.general.git_config:
#     name: alias.
#     scope: global
#     value:

# - name: "Git | Set alias."
#   community.general.git_config:
#     name: alias.
#     scope: global
#     value:




# [alias]
# 	build =

# 	ci =
# 	 = "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"docs${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"
# 	feat = "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"feat${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"
# 	fix = "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"fix${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"
# 	perf = "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"perf${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"
# 	refactor = "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"refactor${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"
# 	rev = "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"revert${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"
# 	style = "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"style${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"
# 	test = "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"test${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"
# 	wip = "!a() {\nlocal _scope _attention _message\nwhile [ $# -ne 0 ]; do\ncase $1 in\n  -s | --scope )\n    if [ -z $2 ]; then\n      echo \"Missing scope!\"\n      return 1\n    fi\n    _scope=\"$2\"\n    shift 2\n    ;;\n  -a | --attention )\n    _attention=\"!\"\n    shift 1\n    ;;\n  * )\n    _message=\"${_message} $1\"\n    shift 1\n    ;;\nesac\ndone\ngit commit -m \"wip${_scope:+(${_scope})}${_attention}:${_message}\"\n}; a"
